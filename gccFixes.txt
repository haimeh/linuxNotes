Using said .so from my program gets straightforward error:

	symbol lookup error: libhid.so: undefined symbol: udev_new

nm NOTE:
A : Global absolute symbol.
a : Local absolute symbol.
B : Global bss symbol.
b : Local bss symbol.
D : Global data symbol.
d : Local data symbol.
f : Source file name symbol.
L : Global thread-local symbol (TLS).
l : Static thread-local symbol (TLS).
T : Global text symbol.
t : Local text symbol.
U : Undefined symbol.

$nm libhid.so | grep udev

000000000000181f t copy_udev_string

			U udev_device_get_devnode
			U udev_device_get_parent_with_subsystem_devtype
			...

And udev deps don't show up in the .so:

$ldd libhid.so

	linux-vdso.so.1 => (0x00007ffffcffe000) 
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fc9d03a3000)
	/lib64/ld-linux-x86-64.so.2 (0x00007fc9d099e000)




Got it: With gcc the library list must be immediately following the object being linked. From this the reordering of:

gcc -shared `pkg-config libudev --libs` -o libhid.so hid.o
to:
gcc -shared -o libhid.so hid.o `pkg-config libudev --libs`
